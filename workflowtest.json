{
  "name": "Unternehmensstruktur Generator mit LLM",
  "nodes": [
    {
      "parameters": {},
      "id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
      "name": "Start",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [250, 300]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "config_branche",
              "name": "branche",
              "value": "Technologie",
              "type": "string"
            },
            {
              "id": "config_groesse",
              "name": "unternehmensgroesse",
              "value": "Mittel (100-500 Mitarbeiter)",
              "type": "string"
            },
            {
              "id": "config_land",
              "name": "land",
              "value": "Deutschland",
              "type": "string"
            },
            {
              "id": "config_besonderheit",
              "name": "besonderheit",
              "value": "Fokus auf nachhaltige Lösungen",
              "type": "string"
            },
            {
              "id": "config_hierarchie",
              "name": "hierarchie_ebenen",
              "value": "3",
              "type": "number"
            },
            {
              "id": "config_apikey",
              "name": "openai_api_key",
              "value": "DEIN-OPENAI-API-KEY",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "a0b1c2d3-e4f5-6789-abcd-ef0123456789",
      "name": "Konfiguration",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [450, 300],
      "notes": "HIER ANPASSEN: Branche, Größe, Land, Besonderheiten und OpenAI API Key"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/chat/completions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $json.openai_api_key }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ ({\n  model: 'gpt-4o-mini',\n  response_format: { type: 'json_object' },\n  messages: [\n    {\n      role: 'system',\n      content: 'Du bist ein Experte für Unternehmensstrukturen. Erstelle realistische fiktive Unternehmensdaten. Antworte immer mit validem JSON.'\n    },\n    {\n      role: 'user',\n      content: [\n        'Erstelle ein fiktives Unternehmen mit folgenden Vorgaben:',\n        '- Branche: ' + $json.branche,\n        '- Größe: ' + $json.unternehmensgroesse,\n        '- Land: ' + $json.land,\n        '- Besonderheit: ' + $json.besonderheit,\n        '',\n        'Erstelle ein JSON-Objekt mit folgenden Feldern:',\n        '{',\n        '  \"id\": \"company_001\",',\n        '  \"name\": \"Firmenname\",',\n        '  \"branche\": \"Branche\",',\n        '  \"groesse\": \"Größenkategorie\",',\n        '  \"mitarbeiteranzahl\": Zahl,',\n        '  \"gruendungsjahr\": Jahr,',\n        '  \"hauptsitz\": \"Stadt\",',\n        '  \"beschreibung\": \"Beschreibung\",',\n        '  \"umsatz_mio\": Zahl,',\n        '  \"webseite\": \"www.beispiel.de\"',\n        '}',\n        '',\n        'Antworte NUR mit dem JSON-Objekt, ohne zusätzlichen Text.'\n      ].join('\\n')\n    }\n  ],\n  temperature: 0.8\n}) }}",
        "options": {}
      },
      "id": "b2c3d4e5-f6a7-8901-bcde-f12345678901",
      "name": "HTTP: Unternehmen erstellen",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [650, 300]
    },
    {
      "parameters": {
        "jsCode": "const config = $('Konfiguration').first().json;\nconst response = $input.first().json.choices[0].message.content;\nconst unternehmen = JSON.parse(response);\nreturn { unternehmen, config };"
      },
      "id": "b3c4d5e6-f7a8-9012-bcde-f12345678902",
      "name": "JSON parsen (Unternehmen)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [850, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/chat/completions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $json.config.openai_api_key }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ ({\n  model: 'gpt-4o-mini',\n  response_format: { type: 'json_object' },\n  messages: [\n    {\n      role: 'system',\n      content: 'Du bist ein Experte für Organisationsstrukturen. Erstelle realistische hierarchische Abteilungsstrukturen. Antworte immer mit validem JSON im Format: {\"abteilungen\": [...]}'\n    },\n    {\n      role: 'user',\n      content: [\n        'Erstelle eine hierarchische Abteilungsstruktur für folgendes Unternehmen:',\n        '',\n        'Unternehmen: ' + $json.unternehmen.name,\n        'Branche: ' + $json.unternehmen.branche,\n        'Mitarbeiter: ' + $json.unternehmen.mitarbeiteranzahl,\n        '',\n        'Erstelle ' + $json.config.hierarchie_ebenen + ' Hierarchie-Ebenen mit passenden Abteilungen.',\n        '',\n        'Erstelle ein JSON-Objekt mit einem Array \"abteilungen\". Jede Abteilung hat:',\n        '{',\n        '  \"id\": \"dept_XXX\",',\n        '  \"unternehmen_id\": \"' + $json.unternehmen.id + '\",',\n        '  \"name\": \"Abteilungsname\",',\n        '  \"ebene\": Zahl (1-' + $json.config.hierarchie_ebenen + '),',\n        '  \"parent_id\": \"dept_XXX\" oder null für Ebene 1,',\n        '  \"budget_euro\": Zahl,',\n        '  \"mitarbeiteranzahl\": Zahl',\n        '}',\n        '',\n        'Wichtig:',\n        '- Ebene 1: Geschäftsleitung (1 Abteilung)',\n        '- Ebene 2: Hauptabteilungen (4-6 Abteilungen)',\n        '- Ebene 3+: Unterabteilungen',\n        '- parent_id muss auf existierende übergeordnete Abteilung verweisen',\n        '- Summe der Mitarbeiter sollte ca. ' + $json.unternehmen.mitarbeiteranzahl + ' ergeben',\n        '',\n        'Antworte NUR mit dem JSON-Objekt, ohne zusätzlichen Text.'\n      ].join('\\n')\n    }\n  ],\n  temperature: 0.7\n}) }}",
        "options": {}
      },
      "id": "c3d4e5f6-a7b8-9012-cdef-123456789012",
      "name": "HTTP: Abteilungen erstellen",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1050, 300]
    },
    {
      "parameters": {
        "jsCode": "const response = $input.first().json.choices[0].message.content;\nconst unternehmen = $input.first().json.unternehmen;\nconst config = $('Konfiguration').first().json;\nconst data = JSON.parse(response);\nconst abteilungen = data.abteilungen;\nreturn { unternehmen, abteilungen, config };"
      },
      "id": "c4d5e6f7-a8b9-0123-cdef-123456789013",
      "name": "JSON parsen (Abteilungen)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1250, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/chat/completions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $json.config.openai_api_key }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ ({\n  model: 'gpt-4o-mini',\n  response_format: { type: 'json_object' },\n  messages: [\n    {\n      role: 'system',\n      content: 'Du bist ein HR-Experte. Definiere realistische Rollen und Positionen für jede Abteilung eines Unternehmens. Antworte immer mit validem JSON im Format: {\"rollen\": [...]}'\n    },\n    {\n      role: 'user',\n      content: [\n        'Definiere für folgendes Unternehmen alle benötigten Rollen pro Abteilung:',\n        '',\n        'Unternehmen: ' + $json.unternehmen.name,\n        'Branche: ' + $json.unternehmen.branche,\n        '',\n        'Abteilungen:',\n        JSON.stringify($json.abteilungen.map(a => ({ name: a.name, ebene: a.ebene, mitarbeiter: a.mitarbeiteranzahl, id: a.id })), null, 2),\n        '',\n        'Erstelle ein JSON-Objekt mit einem Array \"rollen\". Jede Rolle hat:',\n        '{',\n        '  \"id\": \"role_XXX\",',\n        '  \"abteilung_id\": \"dept_XXX\",',\n        '  \"titel\": \"Rollentitel\",',\n        '  \"beschreibung\": \"Was macht diese Rolle\",',\n        '  \"ebene\": \"Entry/Mid/Senior/Lead/Executive\",',\n        '  \"anzahl_personen\": Zahl (wie viele Personen in dieser Rolle),',\n        '  \"gehalt_min\": Zahl,',\n        '  \"gehalt_max\": Zahl,',\n        '  \"anforderungen\": [\"Skill 1\", \"Skill 2\"]',\n        '}',\n        '',\n        'Wichtig:',\n        '- Definiere 2-6 verschiedene Rollen pro Abteilung',\n        '- Berücksichtige Hierarchie (Leiter, Manager, Spezialisten, Mitarbeiter)',\n        '- Die Summe aller anzahl_personen pro Abteilung sollte ungefähr der Mitarbeiteranzahl der Abteilung entsprechen',\n        '- Gehälter realistisch nach Branche und Rolle',\n        '',\n        'Antworte NUR mit dem JSON-Objekt, ohne zusätzlichen Text.'\n      ].join('\\n')\n    }\n  ],\n  temperature: 0.7\n}) }}",
        "options": {}
      },
      "id": "d1e2f3a4-b5c6-7890-cdef-234567890131",
      "name": "HTTP: Rollen erstellen",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1450, 300]
    },
    {
      "parameters": {
        "jsCode": "const response = $input.first().json.choices[0].message.content;\nconst unternehmen = $input.first().json.unternehmen;\nconst abteilungen = $input.first().json.abteilungen;\nconst config = $input.first().json.config;\nconst data = JSON.parse(response);\nconst rollen = data.rollen;\nreturn { unternehmen, abteilungen, rollen, config };"
      },
      "id": "d2e3f4a5-b6c7-8901-cdef-234567890132",
      "name": "JSON parsen (Rollen)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1650, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/chat/completions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $json.config.openai_api_key }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ ({\n  model: 'gpt-4o-mini',\n  response_format: { type: 'json_object' },\n  messages: [\n    {\n      role: 'system',\n      content: 'Du bist ein HR-Experte. Erstelle realistische fiktive Mitarbeiterprofile mit Namen, die zur Unternehmenskultur und zum Land passen. Antworte immer mit validem JSON im Format: {\"mitarbeiter\": [...]}'\n    },\n    {\n      role: 'user',\n      content: [\n        'Erstelle fiktive Mitarbeiter für folgendes Unternehmen:',\n        '',\n        'Unternehmen: ' + $json.unternehmen.name,\n        'Land: ' + $json.config.land,\n        'Branche: ' + $json.unternehmen.branche,\n        '',\n        'Rollen (erste 20):',\n        JSON.stringify($json.rollen.slice(0, 20).map(r => ({ id: r.id, titel: r.titel, abteilung_id: r.abteilung_id, anzahl: r.anzahl_personen, gehalt_range: r.gehalt_min + '-' + r.gehalt_max })), null, 2),\n        '',\n        'Erstelle ein JSON-Objekt mit einem Array \"mitarbeiter\". Jeder Mitarbeiter hat:',\n        '{',\n        '  \"id\": \"emp_XXX\",',\n        '  \"rolle_id\": \"role_XXX\",',\n        '  \"abteilung_id\": \"dept_XXX\",',\n        '  \"vorname\": \"Vorname\",',\n        '  \"nachname\": \"Nachname\",',\n        '  \"email\": \"vorname.nachname@domain.de\",',\n        '  \"telefon\": \"+49 ...\",',\n        '  \"alter\": Zahl (25-65),',\n        '  \"gehalt_euro\": Zahl (innerhalb der Rolle),',\n        '  \"eintrittsdatum\": \"YYYY-MM-DD\",',\n        '  \"vertrag\": \"Vollzeit/Teilzeit\",',\n        '  \"standort\": \"' + $json.unternehmen.hauptsitz + '\"',\n        '}',\n        '',\n        'Wichtig:',\n        '- Erstelle die in anzahl_personen angegebene Anzahl von Mitarbeitern pro Rolle',\n        '- Namen sollten zum Land passen (' + $json.config.land + ')',\n        '- Diverse Namen verwenden (Geschlecht, Herkunft)',\n        '- Gehalt im angegebenen Bereich der Rolle',\n        '- Email-Domain: ' + ($json.unternehmen.webseite ? $json.unternehmen.webseite.replace('www.', '') : 'beispiel.de'),\n        '- Eintrittsdatum zwischen Gründungsjahr (' + $json.unternehmen.gruendungsjahr + ') und heute',\n        '- 85% Vollzeit, 15% Teilzeit',\n        '',\n        'Antworte NUR mit dem JSON-Objekt, ohne zusätzlichen Text.'\n      ].join('\\n')\n    }\n  ],\n  temperature: 0.9\n}) }}",
        "options": {}
      },
      "id": "d3e4f5a6-b7c8-9012-cdef-234567890133",
      "name": "HTTP: Mitarbeiter erstellen",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1850, 300]
    },
    {
      "parameters": {
        "jsCode": "const response = $input.first().json.choices[0].message.content;\nconst unternehmen = $input.first().json.unternehmen;\nconst abteilungen = $input.first().json.abteilungen;\nconst rollen = $input.first().json.rollen;\nconst data = JSON.parse(response);\nlet mitarbeiter = data.mitarbeiter;\nmitarbeiter = mitarbeiter.map((ma, index) => ({\n  ...ma,\n  id: `emp_${String(index + 1).padStart(3, '0')}`,\n  unternehmen_id: unternehmen.id,\n  vollname: `${ma.vorname} ${ma.nachname}`\n}));\nreturn { unternehmen, abteilungen, rollen, mitarbeiter };"
      },
      "id": "d4e5f6a7-b8c9-0123-def0-123456789013",
      "name": "JSON parsen (Mitarbeiter)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [2050, 300]
    },
    {
      "parameters": {
        "jsCode": "const { unternehmen } = $input.first().json;\nreturn [{ json: unternehmen }];"
      },
      "id": "e1f2a3b4-c5d6-7890-ef01-234567890121",
      "name": "Unternehmen extrahieren",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [2250, 150]
    },
    {
      "parameters": {
        "jsCode": "const { abteilungen } = $input.first().json;\nreturn abteilungen.map(abt => ({ json: abt }));"
      },
      "id": "e2f3a4b5-c6d7-8901-ef12-234567890122",
      "name": "Abteilungen extrahieren",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [2250, 250]
    },
    {
      "parameters": {
        "jsCode": "const { rollen } = $input.first().json;\nreturn rollen.map(rolle => ({ json: rolle }));"
      },
      "id": "e3f4a5b6-c7d8-9012-ef23-234567890123",
      "name": "Rollen extrahieren",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [2250, 350]
    },
    {
      "parameters": {
        "jsCode": "const { mitarbeiter } = $input.first().json;\nreturn mitarbeiter.map(ma => ({ json: ma }));"
      },
      "id": "e4f5a6b7-c8d9-0123-ef34-234567890124",
      "name": "Mitarbeiter extrahieren",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [2250, 450]
    },
    {
      "parameters": {
        "operation": "toJson",
        "options": {
          "fileName": "unternehmen.json"
        }
      },
      "id": "e5f6a7b8-c9d0-1234-ef01-234567890124",
      "name": "Unternehmen JSON",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [2450, 150]
    },
    {
      "parameters": {
        "operation": "toJson",
        "options": {
          "fileName": "abteilungen.json"
        }
      },
      "id": "f6a7b8c9-d0e1-2345-f012-345678901235",
      "name": "Abteilungen JSON",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [2450, 250]
    },
    {
      "parameters": {
        "operation": "toJson",
        "options": {
          "fileName": "rollen.json"
        }
      },
      "id": "f7a8b9c0-d1e2-3456-f123-345678901236",
      "name": "Rollen JSON",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [2450, 350]
    },
    {
      "parameters": {
        "operation": "toJson",
        "options": {
          "fileName": "mitarbeiter.json"
        }
      },
      "id": "a7b8c9d0-e1f2-3456-0123-456789012346",
      "name": "Mitarbeiter JSON",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [2450, 450]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByIndex",
        "options": {}
      },
      "id": "b8c9d0e1-f2a3-4567-1234-567890123457",
      "name": "Dateien zusammenführen",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [2650, 300]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByIndex",
        "options": {}
      },
      "id": "c9d0e1f2-a3b4-4567-8901-234567890145",
      "name": "Dateien + Rollen zusammenführen",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [2850, 300]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByIndex",
        "options": {}
      },
      "id": "d0e1f2a3-b4c5-5678-9012-345678901456",
      "name": "Alle Dateien zusammenführen",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [3050, 300]
    }
  ],
  "connections": {
    "Start": {
      "main": [[{ "node": "Konfiguration", "type": "main", "index": 0 }]]
    },
    "Konfiguration": {
      "main": [[{ "node": "HTTP: Unternehmen erstellen", "type": "main", "index": 0 }]]
    },
    "HTTP: Unternehmen erstellen": {
      "main": [[{ "node": "JSON parsen (Unternehmen)", "type": "main", "index": 0 }]]
    },
    "JSON parsen (Unternehmen)": {
      "main": [[{ "node": "HTTP: Abteilungen erstellen", "type": "main", "index": 0 }]]
    },
    "HTTP: Abteilungen erstellen": {
      "main": [[{ "node": "JSON parsen (Abteilungen)", "type": "main", "index": 0 }]]
    },
    "JSON parsen (Abteilungen)": {
      "main": [[{ "node": "HTTP: Rollen erstellen", "type": "main", "index": 0 }]]
    },
    "HTTP: Rollen erstellen": {
      "main": [[{ "node": "JSON parsen (Rollen)", "type": "main", "index": 0 }]]
    },
    "JSON parsen (Rollen)": {
      "main": [[{ "node": "HTTP: Mitarbeiter erstellen", "type": "main", "index": 0 }]]
    },
    "HTTP: Mitarbeiter erstellen": {
      "main": [[{ "node": "JSON parsen (Mitarbeiter)", "type": "main", "index": 0 }]]
    },
    "JSON parsen (Mitarbeiter)": {
      "main": [
        [
          { "node": "Unternehmen extrahieren", "type": "main", "index": 0 },
          { "node": "Abteilungen extrahieren", "type": "main", "index": 0 },
          { "node": "Rollen extrahieren", "type": "main", "index": 0 },
          { "node": "Mitarbeiter extrahieren", "type": "main", "index": 0 }
        ]
      ]
    },
    "Unternehmen extrahieren": {
      "main": [[{ "node": "Unternehmen JSON", "type": "main", "index": 0 }]]
    },
    "Abteilungen extrahieren": {
      "main": [[{ "node": "Abteilungen JSON", "type": "main", "index": 0 }]]
    },
    "Rollen extrahieren": {
      "main": [[{ "node": "Rollen JSON", "type": "main", "index": 0 }]]
    },
    "Mitarbeiter extrahieren": {
      "main": [[{ "node": "Mitarbeiter JSON", "type": "main", "index": 0 }]]
    },
    "Unternehmen JSON": {
      "main": [[{ "node": "Dateien zusammenführen", "type": "main", "index": 0 }]]
    },
    "Abteilungen JSON": {
      "main": [[{ "node": "Dateien zusammenführen", "type": "main", "index": 1 }]]
    },
    "Rollen JSON": {
      "main": [[{ "node": "Dateien + Rollen zusammenführen", "type": "main", "index": 1 }]]
    },
    "Mitarbeiter JSON": {
      "main": [[{ "node": "Alle Dateien zusammenführen", "type": "main", "index": 1 }]]
    },
    "Dateien zusammenführen": {
      "main": [[{ "node": "Dateien + Rollen zusammenführen", "type": "main", "index": 0 }]]
    },
    "Dateien + Rollen zusammenführen": {
      "main": [[{ "node": "Alle Dateien zusammenführen", "type": "main", "index": 0 }]]
    }
  },
  "pinData": {},
  "settings": { "executionOrder": "v1" },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-10-01T12:00:00.000Z",
  "versionId": "1"
}
